C51 COMPILER V9.60.0.0   MAIN                                                              02/04/2023 19:24:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\EE\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\hardware;.\system) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          #include <tm1638.h>
   3          #include <ssd1306.h>
   4          #include <delay.h>
   5          #include "uart.h"
   6          
   7                                  
   8          uchar state;                                    //接受数据包状态机
   9          uchar len;                                              //接收数据包长度
  10          uchar NetTimeBuffer[15];                //接收数据包缓存
  11          
  12          struct systime                                  //定义网络时间结构体
  13          {
  14                  uchar hour;
  15                  uchar min;
  16                  uchar sec;
  17                  uchar year;
  18                  uchar mon;
  19                  uchar date;
  20          } netTime;
  21          
  22          
  23          
  24          void main()
  25          {
  26   1              UART_Init();
  27   1              TM1638_Init();                                                                                          //初始化数码管模块
  28   1              TM1638_SetLight(0);
  29   1              
  30   1              OLED_Init();
  31   1              OLED_Clear();
  32   1              
  33   1              while(1)
  34   1              {
  35   2                      netTime.hour=(NetTimeBuffer[9]-'0')*10+(NetTimeBuffer[10]-'0');
  36   2                      netTime.min=(NetTimeBuffer[11]-'0')*10+(NetTimeBuffer[12]-'0');
  37   2                      netTime.sec=(NetTimeBuffer[13]-'0')*10+(NetTimeBuffer[14]-'0');
  38   2                      
  39   2                      netTime.year=(NetTimeBuffer[3]-'0')*10+(NetTimeBuffer[4]-'0');
  40   2                      netTime.mon=(NetTimeBuffer[5]-'0')*10+(NetTimeBuffer[6]-'0');
  41   2                      netTime.date=(NetTimeBuffer[7]-'0')*10+(NetTimeBuffer[8]-'0');
  42   2                      
  43   2                      OLED_ShowChar(1,1,'0'+netTime.hour/10,16);
  44   2                      OLED_ShowChar(9,1,'0'+netTime.hour%10,16);
  45   2                      OLED_ShowChar(17,1,':',16);
  46   2                      OLED_ShowChar(25,1,'0'+netTime.min/10,16);
  47   2                      OLED_ShowChar(33,1,'0'+netTime.min%10,16);
  48   2                      OLED_ShowChar(41,1,':',16);
  49   2                      OLED_ShowChar(49,1,'0'+netTime.sec/10,16);
  50   2                      OLED_ShowChar(57,1,'0'+netTime.sec%10,16);
  51   2      
  52   2                      TM1638_ShowTime(netTime.hour,netTime.min,netTime.sec);
  53   2              }
  54   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              02/04/2023 19:24:03 PAGE 2   

  55          
  56          void UART_IT() interrupt 4
  57          {
  58   1              uchar buf;
  59   1              if(RI==1)
  60   1              {
  61   2                      buf=SBUF;
  62   2                      if(buf==0x40)
  63   2                      {
  64   3                              state=1;                                        //接收到包头,进状态1,记录14个时间数和0D
  65   3                              len=15;
  66   3                              P0=0xfe;
  67   3                      }
  68   2                      if(state==1&&len>0)
  69   2                      {
  70   3                              NetTimeBuffer[15-len]=buf;      //将接受到的数据存入NetTime数组
  71   3                              len--;
  72   3                      }
  73   2                      if(buf==0x0A)
  74   2                      {
  75   3                              state=2;                                        //接受到包尾，状态2
  76   3                              len=0;
  77   3                              P0=0xff;
  78   3                      }
  79   2              }
  80   1              RI=0;
  81   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    454    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     23    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
